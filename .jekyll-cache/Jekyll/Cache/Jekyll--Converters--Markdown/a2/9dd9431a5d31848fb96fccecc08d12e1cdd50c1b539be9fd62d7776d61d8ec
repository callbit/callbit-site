I"ö<p>GitHub √© uma plataforma de desenvolvimento de software baseada em nuvem que oferece armazenamento de c√≥digo e ferramentas de colabora√ß√£o para desenvolvedores. Ele permite que os desenvolvedores armazenem, compartilhem e colaborem em projetos de software usando o sistema de controle de vers√£o Git. Al√©m disso, oferece recursos adicionais, como gerenciamento de tarefas, relat√≥rios de erros e integra√ß√µes de terceiros.</p>

<h1 id="instalando-o-git">Instalando o Git</h1>

<p>Instale o Git: voc√™ pode baixar o instalador do Git para Windows, Mac ou Linux no site oficial.</p>

<p>Configure seu nome de usu√°rio e endere√ßo de e-mail: o Git usa essas informa√ß√µes para identificar quem fez as altera√ß√µes nos commits. Voc√™ pode configur√°-los usando os seguintes comandos:</p>

<blockquote>
  <p>$ git config ‚Äìglobal user.name ‚ÄúSeu nome‚Äù
$ git config ‚Äìglobal user.email ‚Äúseu@email.com‚Äù</p>
</blockquote>

<p>Configure seu editor de texto padr√£o: o Git usa um editor de texto para compor mensagens de commit. Voc√™ pode configurar o editor padr√£o usando o seguinte comando:</p>

<blockquote>
  <p>$ git config ‚Äìglobal core.editor ‚Äúnomedoeditor‚Äù</p>
</blockquote>

<p>Configure o git para usar o ssh: caso voc√™ tenha uma chave ssh configurada, voc√™ pode usar ela para se autenticar no github, evitando digitar sua senha toda vez que for fazer um push ou pull.</p>

<blockquote>
  <p>$ git config ‚Äìglobal user.email ‚Äúseu@email.com‚Äù</p>
</blockquote>

<h1 id="top-comandos-b√°sicos">Top Comandos b√°sicos:</h1>

<p>Esses s√£o os passos b√°sicos para configurar o Git em sua m√°quina. Existem outras configura√ß√µes avan√ßadas que voc√™ pode fazer, mas essas s√£o as mais importantes para come√ßar a usar o Git.</p>

<p>Aqui est√£o alguns dos comandos b√°sicos do Git e como us√°-los:</p>

<ul>
  <li><strong>git init</strong>: inicializa um novo reposit√≥rio Git em uma pasta espec√≠fica.</li>
</ul>

<blockquote>
  <p>$ git init</p>
</blockquote>

<ul>
  <li><strong>git clone</strong>: cria uma c√≥pia local de um reposit√≥rio remoto.</li>
</ul>

<blockquote>
  <p>$ git clone https://github.com/user/repo.git</p>
</blockquote>

<ul>
  <li><strong>git status</strong>: mostra o status atual do reposit√≥rio, incluindo quais arquivos foram modificados e/ou adicionados.</li>
</ul>

<blockquote>
  <p>$ git status</p>
</blockquote>

<ul>
  <li><strong>git add</strong>: adiciona um arquivo ou uma pasta para o pr√≥ximo commit.</li>
</ul>

<blockquote>
  <p>$ git add file.txt</p>
</blockquote>

<ul>
  <li><strong>git commit</strong>: salva as altera√ß√µes adicionadas em um novo commit.</li>
</ul>

<blockquote>
  <p>$ git commit -m ‚ÄúCommit message‚Äù</p>
</blockquote>

<ul>
  <li><strong>git log</strong>: mostra o hist√≥rico de commits no reposit√≥rio.</li>
</ul>

<blockquote>
  <p>$ git log</p>
</blockquote>

<ul>
  <li><strong>git diff</strong>: mostra as diferen√ßas entre as vers√µes atuais e anteriores de um arquivo.</li>
</ul>

<blockquote>
  <p>$ git diff file.txt</p>
</blockquote>

<ul>
  <li><strong>git branch</strong>: gerencia ramifica√ß√µes (branches) no reposit√≥rio.</li>
</ul>

<blockquote>
  <p>$ git branch</p>
</blockquote>

<ul>
  <li><strong>git checkout</strong>: muda para outra ramifica√ß√£o ou volta para uma vers√£o anterior de um arquivo.</li>
</ul>

<blockquote>
  <p>$ git checkout branch-name</p>
</blockquote>

<ul>
  <li><strong>git push</strong>: envia as altera√ß√µes para o reposit√≥rio remoto.</li>
</ul>

<blockquote>
  <p>$ git push origin branch-name</p>
</blockquote>

<ul>
  <li><strong>git pull</strong>: baixa as atualiza√ß√µes do reposit√≥rio remoto e as aplica ao reposit√≥rio local.</li>
</ul>

<blockquote>
  <p>$ git pull origin branch-name</p>
</blockquote>

<p>Esses s√£o alguns dos comandos b√°sicos do Git, que permitem voc√™ inicializar, clonar, gerenciar e enviar as altera√ß√µes para um reposit√≥rio. No entanto, existem muitos outros comandos e recursos avan√ßados dispon√≠veis no Git.</p>
:ET