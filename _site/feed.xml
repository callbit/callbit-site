<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="pt_br"><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" hreflang="pt_br" /><updated>2021-10-28T15:07:20+00:00</updated><id>/feed.xml</id><title type="html">Callbit.com.br</title><author><name>Caubit</name></author><entry><title type="html">Recaptcha</title><link href="/captcha/" rel="alternate" type="text/html" title="Recaptcha" /><published>2021-10-27T00:00:00+00:00</published><updated>2021-10-27T00:00:00+00:00</updated><id>/captcha</id><content type="html" xml:base="/captcha/">reCAPTCHA
O reCAPTCHA é um serviço de CAPTCHA sigla, em inglês, para “Completely Automated Public Turing Test to Tell Computers and Humans Apart”, que em tradução simplificada seria “Teste de Turing público e automatizado para separar computadores de humanos”, ou seja um processo para testar se é uma pessoa ou máquina. 

O objetivo principal é conseguir separar trafego para sites e aplicativos, bloqueando que Robôs utilizem seus sites e evitando assim sobrecarga no seu servidor. 

Atualmente o reCAPTCHA possui 2 implementações a V2 ( invisível e checkbox ) e a V3 ( totalmente transparente, utilizando um score ).

Sendo bem simplista a diferença entre a V2 e a V3 é que esta ultima não apresente desafio algum para o usuário final, havendo apenas bloquei ou não para o usuário final, segundo o google a nova versão garante mais autonomia para os gestores de site. 

[Clique aqui](https://youtu.be/tbvxFW4UJdU)

Independente da versão utilizada ( V2 ou V3 ) o processo de implementação do reCAPTCHA é feito em 2 blocos, um processo que roda no lado do cliente e um segundo que roda no lado do servidor, vide esquema abaixo:

![enter image description here](../assets/images/sequencerecaptcha.png)

Um dos erros mais comuns na implementação e não testar o segunda etapa, onde o seu servidor vai até o google e verifica se o token passado é válido. Caso essa etapa não seja feita  a implementação do reCAPTCHA está totalmente ineficaz, comprometendo assim o seu servidor.

Uma forma muito simple é utilizando uma ferramenta de captura de requisição como o Burp Suite, interceptar a requisição e alterar o valor do campo g-recaptcha-response e verificar se o servidor ira retornar sucesso ou falha na requisição, caso o servidor aceite requisição com o valor do g-recaptcha-response alterado, significa que sua implementação esta insegura e o reCAPTCHA foi implementado de forma insegura e incorreta. 
 
Outra forma de testar é utilizando o chrome e copiar a requisição feita via curl e reenviar/alterar via linha de comando, como o reCAPTCHA não aceita reutilização token, o reenvio via curl tem que retornar erro no retorno.

O reCAPTCHA é uma solução muito útil e eficaz para mitigação abuso no consumo do servidor, mas para que isso ocorra a implementação deve ser feita de forma correta, caso contrário será somente uma feature inútil ao seu site.</content><author><name>caubit</name></author><category term="cybersecurity" /><category term="captcha" /><summary type="html">reCAPTCHA O reCAPTCHA é um serviço de CAPTCHA sigla, em inglês, para “Completely Automated Public Turing Test to Tell Computers and Humans Apart”, que em tradução simplificada seria “Teste de Turing público e automatizado para separar computadores de humanos”, ou seja um processo para testar se é uma pessoa ou máquina.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/images/1.jpg" /><media:content medium="image" url="/assets/images/1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">NMAP básico</title><link href="/nmap-basico/" rel="alternate" type="text/html" title="NMAP básico" /><published>2021-10-27T00:00:00+00:00</published><updated>2021-10-27T00:00:00+00:00</updated><id>/nmap-basico</id><content type="html" xml:base="/nmap-basico/">NMAP (&quot;Network Mapper&quot;) é uma ferramenta free e opensouce para disconery de rede e auditoria de segurança. 

## Instalando NMAP
1. Atualizando pacotes do Linux
&gt;`sudo apt-get update`
2. Install NMAP
&gt;`sudo apt-get install nmap`
3. Verifique a versão 
&gt;`nmap --version`

## Básico contra um host
&gt; *nmap* ``1.1.1.1`` 
Ou você pode usar um endereço 
&gt; nmap ``callbit.online``

## Scan contra uma porta especifica 
Um range de portas
&gt; *nmap* -p ``1-65535`` ``1.1.1.1``
Uma serie de portas
&gt; *nmap* -p ``80,443`` ``1.1.1.1``

## Scan de múltiplos IPs
&gt; *nmap* ``1.1.1.1`` ``2.2.2.2``
Ips consecutivos
&gt; *nmap* -p ``1.1.1.1,2,3,4``

## Scan nas portas mais populares
&gt; *nmap* --top-ports ``20 192.168.1.106``

## Scan em range de IP
&gt; *nmap* -p ``8.8.8.0/28`` ou *nmap* ``8.8.8.1-14``

## Scan agressivo
&gt; *nmap* -A ``8.8.8.0``

## Scan máquinas ativas
&gt; *nmap* -sP ``8.8.8.0``

## Scan agressivo
&gt; *nmap* -sL ``8.8.8.0``

## Scan obter o SO
&gt; *nmap* -O ``8.8.8.0``

## Scan com scripts básicos
&gt; *nmap*  -Pn --script vuln ``8.8.8.0``</content><author><name>caubit</name></author><category term="cybersecuroty" /><category term="captcha" /><summary type="html">NMAP (“Network Mapper”) é uma ferramenta free e opensouce para disconery de rede e auditoria de segurança.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/images/7.jpg" /><media:content medium="image" url="/assets/images/7.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">HTTP Headers de segurança - 5 Security Headers que você deve configurar no seu Site!</title><link href="/Header/" rel="alternate" type="text/html" title="HTTP Headers de segurança - 5 Security Headers que você deve configurar no seu Site!" /><published>2021-10-26T00:00:00+00:00</published><updated>2021-10-26T00:00:00+00:00</updated><id>/Header</id><content type="html" xml:base="/Header/">HTTP Headers permitem que o browser ( client ) e o servidor se comunicam através de HTTP request ou response e para proteger o cliente ( browser ) contra alguns ataques, foram adicionados a browser modernos alguns mecanismos de proteção para tratar vulnerabilidades. 

Esses Headers são:

1. **HTTP Strict-Transport-Security (HSTS)**: força o uso de conexões criptografadas, evitando assim um ataque de Man in the Middle, que pode ocorrer, por exemplo em Wifi Públicos, já que todas as requisições são forçadas a serem em HTTPS.

2. **Content Security Policy (CSP)**: Protege contra ataques de injeção de conteúdos como Cross-Site Scripting (XSS), por bloquear requisição entre domínios não autorizados. 

3. **X-Frame-Options**:  Evita ataques como Clickjacking ( ataque de roubo de cliques ), por dizer se o browser se deve ou não deve carregar conteúdos de endereços especificados,  importante para  tags html como `&lt;frame&gt;`, `&lt;iframe&gt;`, `&lt;object&gt;` ou `&lt;embed&gt;`.

4. **X-Content-Type-Options**: Protege contra vulnerabilidades de MIME sniffing, evita que o browser carregue arquivos que foram injetados de forma invalida ou indevida, evitando por exemplo que  seja injetado um arquivo texto com um javascript e ele seja executado do lado do cliente.

5. **X-XSS-Protection**: faz com que os navegadores apliquem filtros contra ataques XSS.  XSS são ataques onde uma pessoa poder forçar a execução de códigos indevidos/arbitrários na maquina de outra pessoa. 


Bônus 2 extras: 

Server: 

X-Powered-By:

Como validar

Browser 

Valores esperados:

HTTP Strict-Transport-Security (HSTS):

- Strict-Transport-Security: max-age=`expire-time`
- Strict-Transport-Security: max-age=`expire-time`; includeSubDomains
- Strict-Transport-Security: max-age=`expire-time`; preload
&gt; Note que você deve incluir um número para o expire-time, tempo em segundo.

Content Security Policy (CSP):
- Content-Security-Policy: policy
&gt; **Exemplo** Content-Security-Policy: default-src 'self'

X-Frame-Options: 
- X-Frame-Options: DENY
- X-Frame-Options: SAMEORIGIN

X-Content-Type-Options:
- X-Content-Type-Options: nosniff

X-XSS-Protection:
- X-XSS-Protection: 1
- X-XSS-Protection: 1; mode=block
- X-XSS-Protection: 1; report=&lt; reporting-uri &gt;
&gt; 1 habilita a filtragem, se um ataque for detactado ele reporta ao *reporting-uri* o ataque</content><author><name>caubit</name></author><category term="cybersecurity" /><category term="web" /><summary type="html">HTTP Headers permitem que o browser ( client ) e o servidor se comunicam através de HTTP request ou response e para proteger o cliente ( browser ) contra alguns ataques, foram adicionados a browser modernos alguns mecanismos de proteção para tratar vulnerabilidades.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/assets/images/2.jpg" /><media:content medium="image" url="/assets/images/2.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>